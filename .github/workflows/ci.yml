---
name: CI
on: [ workflow_call, push, pull_request ]
jobs:
  omnilint:
    uses: lpenz/omnilint/.github/workflows/omnilint.yml@v0.5
  # Rust actions from:
  # https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
  cargo-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test-coverage:
    name: cargo test with coveralls
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: coverage
        uses: docker://lpenz/ghaction-rust-coverage:0.8.0
        with:
          dependencies_debian: libssl-dev pkg-config
      - uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v2
        with:
          push: false
  publish-crate:
    needs: [ omnilint, cargo-check, test-coverage, rustfmt, clippy, docker-build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.8.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        if: steps.version.outputs.version_tagged != '' && env.CARGO_REGISTRY_TOKEN != ''
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  dockerhub:
    needs: [ omnilint, cargo-check, test-coverage, rustfmt, clippy, docker-build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.9.0
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          push: ${{ steps.version.outputs.version_docker_ci != 'null' }}
          tags: ${{ github.repository }}:${{ steps.version.outputs.version_docker_ci }}
